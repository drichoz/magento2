https://www.howtoforge.com/tutorial/how-to-install-magento-2-1-on-centos-7/
https://phoenixnap.com/kb/how-to-setup-ftp-server-install-vsftpd-centos-7
https://swissuplabs.com/magento-themes/free-magento-2-theme-absolute.html
http://docs.swissuplabs.com/m2/themes/absolute/installation/manual/
https://devdocs.magento.com/guides/v2.3/comp-mgr/cli/cli-upgrade.html
https://devdocs.magento.com/guides/v2.3/comp-mgr/prereq/prereq_compman-checklist.html
https://devdocs.magento.com/guides/v2.3/comp-mgr/prereq/prereq_compman-checklist.html#magento-owner-group

Google ReCaptcha
https://www.google.com/recaptcha/admin/site/347620537
Site Key = 6Le5RLgUAAAAAEd6djtJPU_f2_FMZ--x91SepKQE
Secret Key = 6Le5RLgUAAAAALAwZ4kdyL7GJFVYNo1LG755gpZ3

DAR 30.12.2019
Install Magento 2.3.3 on CentOS 7
Install NGINX
--- $ sudo yum -y install epel-release
--- $ sudo yum -y install nginx
- start Nginx and add it to start at the boot time.
--- $ sudo systemctl start nginx
--- $ sudo systemctl enable nginx
- checl NGINX listen on port 80
--- $ netstat -plntu
- Install and Configure PHP-FPM
--- $ sudo rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
--- $ yum -y install php72w-fpm php72w-curl php72w-cli php72w-mysql php72w-gd php72w-xsl php72w-json php72w-intl php72w-pear php72w-devel php72w-mbstring php72w-zip php72w-soap
- Install nano
--- $ sudo yum install nano
- Edit php.ini with vim
--- $ sudo nano /etc/php.ini
----- cgi.fix_pathinfo=0
----- memory_limit = 512M
----- max_execution_time = 1800
----- zlib.output_compression = On
----- session.save_path = "/var/lib/php/session"
----- ^X / y / (enter)
- Edit the php-fpm configuration file www.conf
--- $ sudo nano /etc/php-fpm.d/www.conf
----- user = nginx
----- group = nginx
----- listen = /var/run/php-fpm/php-fpm.sock
----- listen.owner = nginx
----- listen.group = nginx
----- listen.mode = 0660
----- env[HOSTNAME] = $HOSTNAME
----- env[PATH] = /usr/local/bin:/usr/bin:/bin
----- env[TMP] = /tmp
----- env[TMPDIR] = /tmp
----- env[TEMP] = /tmp
----- ^X / y / (enter)
- Create a new directory for session path
--- $ sudo mkdir -p /var/lib/php/session/
--- $ sudo chown -R nginx:nginx /var/lib/php/session/
- Create a new directory for php-fpm socket file location
--- $ sudo mkdir -p /run/php/
--- $ sudo chown -R nginx:nginx /run/php/
- Start the daemon now and enable it to start at boot time with the systemctl command below.
--- $ sudo systemctl start php-fpm
--- $ sudo systemctl enable php-fpm
- Check if php-fpm is running under the socket file
--- $ sudo netstat -pl | grep php-fpm.sock
Install MySQL 5.7 Server
- Download and add the new MySQL repository for MySQL 5.7 installation
--- $ sudo yum localinstall https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm
--- $ sudo yum install mysql-community-server
- Start mysql and add it to start at boot time
--- $ sudo systemctl start mysqld
--- $ sudo systemctl enable mysqld
- Use the grep command to see the default password for MySQL 5.7
--- $ sudo grep 'temporary' /var/log/mysqld.log
--- pq:U)j0KYfYF
- Connect to the mysql shell with user root and default password.
--- $ mysql -u root -p
- Change default root password
--- > ALTER USER 'root'@'localhost' IDENTIFIED BY '2Mrtmh@U';
--- > flush privileges;
--- > create database magentodb;
--- > create user magentouser@localhost identified by 'nFBgj@2b';
--- > grant all privileges on magentodb.* to magentouser@localhost identified by 'nFBgj@2b';
--- > flush privileges;
--- > exit
Install and Configure Magento
- Install PHP Composer
--- $ sudo curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/bin --filename=composer
- Check the composer version
--- $ composer -v
- Download and Extract Magento
--- $ sudo yum install wget
--- $ cd /var/www/
--- $ sudo wget https://github.com/magento/magento2/archive/2.3.3.zip
--- $ sudo yum -y install unzip
--- $ sudo unzip 2.3.3.zip
--- $ sudo mv magento2-2.3.3 magento2
--- $ sudo rm 2.3.3.zip
- Install PHP Dependencies
--- $ cd magento2
--- $ sudo yum install php72w-bcmath
--- $ sudo composer update -v
- Configure Magento Virtual Host
--- $ cd /etc/nginx/
--- $ sudo nano conf.d/magento.conf
		upstream fastcgi_backend {
				server  unix:/run/php/php-fpm.sock;
		}
		 
		server {
		 
				listen 80;
				server_name crafts-africa.com;
				set $MAGE_ROOT /var/www/magento2;
				set $MAGE_MODE developer;
				include /var/www/magento2/nginx.conf.sample;
		}
- Test the configuration. Restart Nginx service
--- $ sudo nginx -t
--- $ sudo systemctl restart nginx
Install Magento 2.3
- Go to the magento2 directory to install Magento on the command line
--- $ cd /var/www/magento2
		sudo bin/magento setup:install --backend-frontname="admin" --key="9NVFu2x2CGXP7L8c5mGXnfBaSLnbb5TD" --db-host="localhost" --db-name="magentodb" --db-user="magentouser" --db-password="nFBgj@2b" --language="en_US" --currency="USD" --timezone="America/New_York" --use-rewrites=1 --use-secure=0 --base-url="http://crafts-africa.com" --base-url-secure="https://crafts-africa.com" --admin-user=admin --admin-password=Vz88ayMVZ25c8y8Q --admin-email=david.richoz@gmail.com --admin-firstname=admin --admin-lastname=user --cleanup-database
- Change the permission for the etc directory and change the owner of the magento2 directory to the 'nginx' user
--- $ sudo chmod 700 /var/www/magento2/app/etc
--- $ sudo chown -R nginx:nginx /var/www/magento2
- Configure Magento Cron
--- $ sudo crontab -u nginx -e
		* * * * * /usr/bin/php /var/www/magento2/bin/magento cron:run | grep -v "Ran jobs by schedule" >> /var/www/magento2/var/log/magento.cron.log
		* * * * * /usr/bin/php /var/www/magento2/update/cron.php >> /var/www/magento2/var/log/update.cron.log
		* * * * * /usr/bin/php /var/www/magento2/bin/magento setup:cron:run >> /var/www/magento2/var/log/setup.cron.log
- Configure SELinux and Firewalld
--- $ sudo sestatus
--- $ sudo yum -y install policycoreutils-python
--- $ cd /var/www/
--- $ sudo semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/magento2(/.*)?'
--- $ sudo semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/magento2/app/etc(/.*)?'
--- $ sudo semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/magento2/var(/.*)?'
--- $ sudo semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/magento2/pub/media(/.*)?'
--- $ sudo semanage fcontext -a -t httpd_sys_rw_content_t '/var/www/magento2/pub/static(/.*)?'
--- $ sudo restorecon -Rv '/var/www/magento2/'
--- $ sudo yum -y install firewalld
--- $ sudo systemctl start firewalld
--- $ sudo systemctl enable firewalld
--- $ sudo firewall-cmd --permanent --add-service=http
--- $ sudo firewall-cmd --permanent --add-service=https
--- $ sudo firewall-cmd --reload
- See the open ports for services
--- $ sudo firewall-cmd --list-all
Testing
- http://ec2-34-234-164-158.compute-1.amazonaws.com

Install VSFTP
- Update the package manager
--- $ sudo yum update

Enable HTTPS with admin
- Open Mysql CLI
--- $ sudo mysql -u root -p
--- > use magentodb;
--- > select * from core_config_data where path = 'web/secure/use_in_adminhtml';
--- > INSERT INTO core_config_data (scope,scope_id,path,value) VALUES ('default',0,'web/secure/use_in_adminhtml',1);
--- > exit
--- $ sudo php bin/magento cache:clean

Transfert files with pscp
cd C:\Users\david\Dropbox\Craftsafrica\Magento
C:\Users\david\Dropbox\Craftsafrica\Magento>pscp -load CraftsafricaAWS swissup.absolute-metapackage-1.3.0.zip centos@ec2-34-234-164-158.compute-1.amazonaws.com:/home/centos/swissup.absolute-metapackage-1.3.0.zip

Install Template Swissup
- Unpack downloaded archive into <magento_root>/vendor/swissup/artifacts folder:
--- $ sudo mkdir -p /var/www/magento2/vendor/swissup/artifacts
--- $ sudo unzip swissup.absolute-metapackage-1.3.0.zip -d /var/www/magento2/vendor/swissup/artifacts
- Run composer and magento commands
--- $ cd /var/www/magento2
--- $ sudo composer config repositories.swissupartifacts artifact $(pwd)/vendor/swissup/artifacts
- Get the sources
--- $ sudo composer require swissup/absolute-metapackage
- Enable new modules
--- $ sudo php bin/magento module:enable Swissup_Core Swissup_FontAwesome Swissup_SlickCarousel Swissup_ThemeEditor Swissup_ThemeEditorSwissupAbsolute
- Run magento upgrade scripts
--- $ sudo php bin/magento setup:upgrade
- Remove outdated files
--- $ sudo rm -rf pub/static/_requirejs var/view_preprocessed pub/static/frontend/ pub/static/adminhtml/ generated/code/
- If you use Production Mode you need to deploy static content and run di:compile command
--- $ sudo php bin/magento setup:static-content:deploy en_US en_GB -f
--- $ sudo php bin/magento setup:di:compile

Setup configuration and theme content
- Navigate to Swissup > Module Manager, find Swissup_ThemeFrontendAbsolute and click Open Installer option in actions column
- Select store, where you wish to install Absolute Theme and press Install button
- Edit CSS Files
--- $ cd /var/www/magento2/vendor/swissup/theme-frontend-absolute/web/css/source/
--- $ sudo nano _extend.less
- Clear cache
--- $ sudo rm -rf /var/www/magento2/pub/static/frontend/Swissup/absolute/

Setup Startup script for php run folder creation
- $ sudo nano /home/centos/setup-run.sh
    !#/bin/bash
	mkdir -p /run/php/
	chown -R nginx:nginx /run/php/
- $ chmod +x /home/centos/setup-run.sh
- $ crontab -e
    @reboot /home/centos/setup-run.sh
